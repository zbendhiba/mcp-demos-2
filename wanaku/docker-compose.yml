services:
  init-myservice:
    container_name: wanaku-init-myservice
    image: alpine # Or any small image with chown
    user: "0:0"
    command: /tmp/create-sample-text.sh 
    volumes:
      - ~/.wanaku/:/home/default/.wanaku/
      - ./demos:/tmp:ro
      - ./create-sample-text.sh:/tmp/create-sample-text.sh:ro
  wanaku-tool-service-http:
    container_name: wanaku-tool-service-http
    environment:
      WANAKU_SERVICE_REGISTRATION_URI: http://wanaku-router:8080
    depends_on:
      wanaku-router:
        condition: service_started
      init-myservice:
        condition: service_completed_successfully
    image: quay.io/wanaku/wanaku-tool-service-http:wanaku-0.0.7
    pull_policy: always
    ports:
      - "9000:9000"
    volumes:
      - ~/.wanaku/services:/home/default/.wanaku/services

  wanaku-tool-service-yaml-route:
    container_name: wanaku-tool-service-yaml-route
    environment:
      WANAKU_SERVICE_REGISTRATION_URI: http://wanaku-router:8080
    depends_on:
      wanaku-router:
        condition: service_started
      init-myservice:
        condition: service_completed_successfully
    image: quay.io/wanaku/wanaku-tool-service-yaml-route:wanaku-0.0.7
    pull_policy: always
    ports:
      - "9001:9000"
    volumes:
      - ~/.wanaku/services:/home/default/.wanaku/services

  # Uncomment if you want to enable Kafka
  wanaku-tool-service-kafka:
    container_name: wanaku-tool-service-kafka
    environment:
      WANAKU_SERVICE_REGISTRATION_URI: http://wanaku-router:8080
    depends_on:
      wanaku-router:
        condition: service_started
      init-myservice:
        condition: service_completed_successfully
    image: quay.io/wanaku/wanaku-tool-service-kafka:wanaku-0.0.7
    pull_policy: always
    ports:
      - "9003:9000"
    volumes:
      - ~/.wanaku/services:/home/default/.wanaku/services

  wanaku-tool-service-tavily:
    container_name: wanaku-tool-service-tavily
    environment:
      WANAKU_SERVICE_REGISTRATION_URI: http://wanaku-router:8080
    depends_on:
      wanaku-router:
        condition: service_started
      init-myservice:
        condition: service_completed_successfully
    image: quay.io/wanaku/wanaku-tool-service-tavily:wanaku-0.0.7
    pull_policy: always
    ports:
      - "9006:9000"
    volumes:
      - ~/.wanaku/services:/home/default/.wanaku/services

  wanaku-provider-file:
    container_name: wanaku-provider-file
    environment:
      WANAKU_SERVICE_REGISTRATION_URI: http://wanaku-router:8080
    depends_on:
      wanaku-router:
        condition: service_started
      init-myservice:
        condition: service_completed_successfully
    image: quay.io/wanaku/wanaku-provider-file:wanaku-0.0.7
    pull_policy: always
    ports:
      - "9002:9000"
    volumes:
      - ~/.wanaku/:/home/default/.wanaku/
      - ./demos:/tmp/demos:ro
      - wanaku-tmp:/tmp

  wanaku-provider-ftp:
    container_name: wanaku-provider-ftp
    environment:
      WANAKU_SERVICE_REGISTRATION_URI: http://wanaku-router:8080
    depends_on:
      wanaku-router:
        condition: service_started
      init-myservice:
        condition: service_completed_successfully
    image: quay.io/wanaku/wanaku-provider-ftp:wanaku-0.0.7
    pull_policy: always
    ports:
      - "9004:9000"
    volumes:
      - ~/.wanaku/services:/home/default/.wanaku/services

  # Uncomment the lines below to enable access to AWS S3
  wanaku-provider-s3:
    container_name: wanaku-provider-s3
    environment:
      WANAKU_SERVICE_REGISTRATION_URI: http://wanaku-router:8080
    depends_on:
      wanaku-router:
        condition: service_started
      init-myservice:
        condition: service_completed_successfully
    image: quay.io/wanaku/wanaku-provider-s3:wanaku-0.0.7
    pull_policy: always
    ports:
      - "9005:9000"
    volumes:
      - ~/.wanaku/services:/home/default/.wanaku/services

  wanaku-router:
    container_name: wanaku-router
    image: quay.io/wanaku/wanaku-router:wanaku-0.0.7
    pull_policy: always
    ports:
      - "8080:8080"
    volumes:
      - ~/.wanaku/router:/home/default/.wanaku/router
    depends_on:
      init-myservice:
        condition: service_completed_successfully
    # healthcheck:
    #   test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/management/info/version"]
    #   interval: 15s
    #   timeout: 10s
    #   retries: 10
    #   start_period: 30s

volumes:
  wanaku-tmp:
